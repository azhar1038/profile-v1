---
import AnimatedLink from "./AnimatedLink.astro";
import IndexCard from "./IndexCard.astro";
export interface Props {
  start: string;
  end: string;
  company: string;
  role: string;
  link: string;
  skills: string[];
}

const { start, end, company, role, link, skills } = Astro.props;
---

<IndexCard list={skills}>
  <div slot="lead" class="lead">
    <span>{end}</span>
    <div class="mx-3" aria-hidden="true"></div>
    <span>{start}</span>
  </div>
  <AnimatedLink href={link} class="header | interactable" slot="header">
    {role}
    <span>{" "}â€¢ {" "}</span>
    {company}
  </AnimatedLink>
  <slot slot="body" />
</IndexCard>

<style>
  .lead {
    --_ball-size: 10px;
    --_color: var(--text1);

    display: inline-flex;
    flex-direction: row-reverse;
    align-items: center;
    text-transform: uppercase;
  }

  .lead > div {
    position: relative;
    background-color: var(--_color);
    width: 2rem;
    height: 2px;
    justify-self: center;
  }

  .lead > div::before,
  .lead > div::after {
    content: "";
    position: absolute;
    height: var(--_ball-size);
    aspect-ratio: 1;
    border-radius: var(--_ball-size);
    background-color: var(--_color);
    top: calc(-1 * var(--_ball-size) / 2 + 1px);
  }

  .lead > div::before {
    left: 0px;
  }

  .lead > div::after {
    right: 0px;
  }

  @media screen and (min-width: 40em) {
    .lead {
      display: grid;
      grid-template-rows: auto 1fr auto;
      text-align: center;
      height: 100%;
    }

    .lead > div {
      height: calc(100% - 4 * var(--_ball-size));
      width: 2px;
    }

    .lead > div::before,
    .lead > div::after {
      left: calc(-1 * var(--_ball-size) / 2 + 1px);
    }

    .lead > div::before {
      top: 0px;
    }

    .lead > div::after {
      top: auto;
      bottom: 0px;
    }
  }
</style>
